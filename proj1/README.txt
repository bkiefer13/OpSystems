Daniel Razavi 4134953
Brynn Kiefer  4785044

Proj 1

For the lottery scheduler, I started by altering the PM to pass nice values directly to the scheduler. In the scheduler, I convert the nice to a priority if it is a system process, and use it as the tickets in a user process. The initial amount of tickets of a user process is set to 5 and is updated in do_nice to be no greater than 100. The total number of tickets is updated as well. The lottery is called in do_noquantum and in do_stop_scheduling. To perform the lottery, the winning ticket is first chosen at random from 0 to the total tickets minus 1. It then loops through each user process in use and subtracts its tickets from the winning ticket number. The first process to reduce the winning ticket number past 0 is the winner, and has its priority boosted to USER_Q.

For the shell, I started with building a simple parser in order to read in the user input and be able to exit when the user entered "exit" or CTRL-D. I then built off of that, adding in functionality for running basic commands. Then came the hard part, adding in redirection and piping. I had a lot of issues in the beginning getting simple redirection to work, though surprisingly piping wasn't as difficult to implement once everything else was up and running. I did run into a good amount of difficulty with chaining commands, and spent a majority of the last few days debugging that. In the end, the only thing I was not able to finish was being able to input redirection without spacing, ie cat<test.txt vs cat < test.txt. I realized that with the way I set up my original parser, adding in functionality that allowed a user to leave out the whitespace around the redirection symbols was more challenging than I thought it would be, and I did not leave myself enough time to reconfigure my parser. 
