Daniel Razavi 4134953
Brynn Kiefer  4785044

Proj 2

We modeled the grad and ugrad the same, in that they both must check the room to see if the other is currently occupying the room. If not, they "claim" the room by using a semaphore (room_id). So, for example, if the room is empty and a grad is trying to get in, it marked the room_id as occupied by grads, so that when an ugrad checks the room, it must wait until the room_id is released by the grads.Then, once the student enters the room, it grabs a table (since the room at this point was originally empty). Then, when another student of the same type tries to enter the room, it sees that the room is currently occupied by the same type of student as themselves, and therefore can enter the room. Once they enter, they check the tables. If one table is empty, the student grabs that table. If both tables are full (can only happen to grads, since there are only two ugrads), then the student leaves the room and must try again. 

In our main function, we specify how many grads and ugrads there are, and to ensure that no starvation occurs, we first cycle through all the grads until each grad has successfully entered the room, obtained a table, and was able to eat pizza. Then, we cycle through all the ugrads in the same fashion. This ensures that all students will get a chance to enter the room and eat pizza, so no starvation can occur. 
